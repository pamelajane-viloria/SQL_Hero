{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pamel\\\\OneDrive\\\\Pictures\\\\Bootcamp\\\\Village88 Bootcamp\\\\Capstone\\\\SQLHero\\\\frontend\\\\src\\\\components\\\\userApp\\\\LevelItem.js\";\nimport React from 'react';\nimport Completed from '../../assets/images/completed.svg';\nimport Current from '../../assets/images/current-level.svg';\nimport Locked from '../../assets/images/locked.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LevelItem({\n  level,\n  currentLevel\n}) {\n  const isCompleted = level.id <= currentLevel;\n  const isCurrent = level.id === currentLevel;\n  const levelStatus = () => {\n    if (isCurrent) return 'locked active'; // Locked and active for current level\n    else if (isCompleted) return 'completed'; // Completed level\n    else return 'locked'; // Locked level\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `level-item p-2 rounded-full text-center shadow-md ${levelStatus()}`,\n      onClick: () => {\n        if (isCompleted) {\n          // Only proceed if level is completed\n          // Trigger navigation or function call to open the Game component with the clicked level\n          openGame(level.id); // Replace with your navigation logic\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isCurrent ? Current : isCompleted ? Completed : Locked,\n        className: \"size-14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = LevelItem;\nexport default LevelItem;\nvar _c;\n$RefreshReg$(_c, \"LevelItem\");","map":{"version":3,"names":["React","Completed","Current","Locked","jsxDEV","_jsxDEV","LevelItem","level","currentLevel","isCompleted","id","isCurrent","levelStatus","className","children","onClick","openGame","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pamel/OneDrive/Pictures/Bootcamp/Village88 Bootcamp/Capstone/SQLHero/frontend/src/components/userApp/LevelItem.js"],"sourcesContent":["import React from 'react';\r\nimport Completed from '../../assets/images/completed.svg';\r\nimport Current from '../../assets/images/current-level.svg';\r\nimport Locked from '../../assets/images/locked.svg';\r\n\r\nfunction LevelItem({ level, currentLevel }) {\r\n    const isCompleted = level.id <= currentLevel;\r\n    const isCurrent = level.id === currentLevel;\r\n    const levelStatus = () => {\r\n        if (isCurrent) return 'locked active'; // Locked and active for current level\r\n        else if (isCompleted) return 'completed'; // Completed level\r\n        else return 'locked'; // Locked level\r\n      };\r\n\r\n    return (\r\n        <li className=\"mt-5\">\r\n            <button\r\n      className={`level-item p-2 rounded-full text-center shadow-md ${levelStatus()}`}\r\n      onClick={() => {\r\n        if (isCompleted) { // Only proceed if level is completed\r\n          // Trigger navigation or function call to open the Game component with the clicked level\r\n          openGame(level.id); // Replace with your navigation logic\r\n        }\r\n      }}\r\n    >\r\n                <img src={isCurrent ? Current : isCompleted ? Completed : Locked} className='size-14'/>\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default LevelItem;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,OAAO,MAAM,uCAAuC;AAC3D,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,EAAE;EACxC,MAAMC,WAAW,GAAGF,KAAK,CAACG,EAAE,IAAIF,YAAY;EAC5C,MAAMG,SAAS,GAAGJ,KAAK,CAACG,EAAE,KAAKF,YAAY;EAC3C,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAID,SAAS,EAAE,OAAO,eAAe,CAAC,CAAC;IAAA,KAClC,IAAIF,WAAW,EAAE,OAAO,WAAW,CAAC,CAAC;IAAA,KACrC,OAAO,QAAQ,CAAC,CAAC;EACxB,CAAC;EAEH,oBACIJ,OAAA;IAAIQ,SAAS,EAAC,MAAM;IAAAC,QAAA,eAChBT,OAAA;MACNQ,SAAS,EAAG,qDAAoDD,WAAW,CAAC,CAAE,EAAE;MAChFG,OAAO,EAAEA,CAAA,KAAM;QACb,IAAIN,WAAW,EAAE;UAAE;UACjB;UACAO,QAAQ,CAACT,KAAK,CAACG,EAAE,CAAC,CAAC,CAAC;QACtB;MACF,CAAE;MAAAI,QAAA,eAEQT,OAAA;QAAKY,GAAG,EAAEN,SAAS,GAAGT,OAAO,GAAGO,WAAW,GAAGR,SAAS,GAAGE,MAAO;QAACU,SAAS,EAAC;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEb;AAACC,EAAA,GAxBQhB,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}