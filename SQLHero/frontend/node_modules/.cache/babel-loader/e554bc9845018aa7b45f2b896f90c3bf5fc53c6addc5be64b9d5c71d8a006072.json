{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pamel\\\\OneDrive\\\\Pictures\\\\Bootcamp\\\\Village88 Bootcamp\\\\Capstone\\\\SQLHero\\\\frontend\\\\src\\\\components\\\\userApp\\\\Play.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Close from '../../assets/images/close.svg';\nimport QueryPerson from '../../assets/images/person.svg';\nimport { DndContext } from '@dnd-kit/core';\nimport Droppable from './Droppable';\nimport Draggable from './Draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Play() {\n  _s();\n  const keywords = ['Select', 'from', 'AND', 'OR', '*', 'customers'];\n  const [queryItems, setQueryItems] = useState([]);\n  const [droppedItems, setDroppedItems] = useState([]);\n  const addKeywordToQuery = e => {\n    var _e$active$data$curren;\n    const newKeyword = (_e$active$data$curren = e.active.data.current) === null || _e$active$data$curren === void 0 ? void 0 : _e$active$data$curren.title; // Access data from dragged element\n    if (!e.over || e.over.id !== 'droppable' || !newKeyword) return;\n    const temp = [...queryItems];\n    if (!temp.includes(newKeyword)) {\n      // Check for duplicates\n      temp.push(newKeyword);\n    }\n    setQueryItems(temp);\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragEnd: addKeywordToQuery,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"relative h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"home.html\",\n        className: \"absolute top-0 left-0 m-4\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Close,\n          alt: \"close\",\n          className: \"w-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"flex p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 px-8 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-gray-200 rounded-full h-4 my-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-600 h-4 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"font-bold text-2xl\",\n            children: \"Select All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \" Imagine you have a friend's contact list. To see all their contacts, you'd say, \\\"Hey, can you show me ALL the information in your 'contacts' list?\\\" In SQL, to get all data from a table named \\\"customers,\\\" you'd use the SELECT * symbol.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: QueryPerson,\n            alt: \"person\",\n            className: \"h-40 inline-block mt-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"speech-bubble ms-4 rounded-lg text-lg\",\n            children: \"Display all data from a table named \\\"customers\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b bg-white h-12 my-3\",\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              items: droppedItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: keywords.map(keyword => /*#__PURE__*/_jsxDEV(Draggable, {\n              children: keyword\n            }, keyword, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 px-8 mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative overflow-x-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"flex p-5 justify-end bg-gray-300 absolute bottom-0 w-full h-40 items-start\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"custom-btn me-8\",\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n  function handleDragEnd(event) {\n    if (event.over && event.over.id === 'droppable') {\n      var _event$active$data$cu;\n      // Get the dragged item data (assuming \"title\" holds the keyword)\n      const droppedItem = (_event$active$data$cu = event.active.data.current) === null || _event$active$data$cu === void 0 ? void 0 : _event$active$data$cu.title;\n\n      // Check if the item is already present in the droppedItems\n      const isAlreadyDropped = droppedItems.some(item => item === droppedItem);\n      if (!isAlreadyDropped) {\n        // Update droppedItems only if the item is not already dropped\n        setDroppedItems([...droppedItems, droppedItem]);\n      }\n    }\n  }\n}\n_s(Play, \"yzh0LugM7xX5D+TmyEpILbRt6hg=\");\n_c = Play;\nexport default Play;\nvar _c;\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"names":["React","useState","Close","QueryPerson","DndContext","Droppable","Draggable","jsxDEV","_jsxDEV","Play","_s","keywords","queryItems","setQueryItems","droppedItems","setDroppedItems","addKeywordToQuery","e","_e$active$data$curren","newKeyword","active","data","current","title","over","id","temp","includes","push","onDragEnd","children","className","href","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","items","map","keyword","handleDragEnd","event","_event$active$data$cu","droppedItem","isAlreadyDropped","some","item","_c","$RefreshReg$"],"sources":["C:/Users/pamel/OneDrive/Pictures/Bootcamp/Village88 Bootcamp/Capstone/SQLHero/frontend/src/components/userApp/Play.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Close from '../../assets/images/close.svg';\r\nimport QueryPerson from '../../assets/images/person.svg';\r\nimport { DndContext } from '@dnd-kit/core';\r\nimport Droppable from './Droppable';\r\nimport Draggable from './Draggable';\r\n\r\nfunction Play() {\r\n    const keywords = ['Select', 'from', 'AND', 'OR', '*', 'customers'];\r\n    const [queryItems, setQueryItems] = useState([]);\r\n    const [droppedItems, setDroppedItems] = useState([]);\r\n    \r\n    const addKeywordToQuery = (e) => {\r\n        const newKeyword = e.active.data.current?.title; // Access data from dragged element\r\n        if (!e.over || e.over.id !== 'droppable' || !newKeyword) return;\r\n      \r\n        const temp = [...queryItems];\r\n        if (!temp.includes(newKeyword)) { // Check for duplicates\r\n          temp.push(newKeyword);\r\n        }\r\n        setQueryItems(temp);\r\n      };\r\n      \r\n    \r\n\r\n    return (\r\n        <DndContext onDragEnd={addKeywordToQuery}>\r\n            <main className=\"relative h-screen\">\r\n                <a href=\"home.html\" className=\"absolute top-0 left-0 m-4\"><img src={Close} alt=\"close\" className=\"w-7\"/></a>\r\n                <section className=\"flex p-5\">\r\n                    <div className=\"w-1/2 px-8 mt-6\">\r\n                        <div className=\"w-full bg-gray-200 rounded-full h-4 my-4\">\r\n                            <div className=\"bg-blue-600 h-4 rounded-full\"></div>\r\n                        </div>                \r\n                        <h1 className='font-bold text-2xl'>Select All</h1>\r\n                        <p className='text-gray-500'> Imagine you have a friend's contact list. To see all their contacts, you'd say, \"Hey, can you show me ALL the information in your 'contacts' list?\" In SQL, to get all data from a table named \"customers,\" you'd use the SELECT * symbol.</p>\r\n                        <img src={QueryPerson} alt=\"person\" className=\"h-40 inline-block mt-4\"/>\r\n                        <span className=\"speech-bubble ms-4 rounded-lg text-lg\">Display all data from a table named \"customers\"</span>\r\n                        <div className='border-b bg-white h-12 my-3'>\r\n                            <Droppable items={droppedItems} />\r\n                        </div>\r\n                        <ul>\r\n                            {keywords.map((keyword) => (\r\n                                <Draggable key={keyword}>{keyword}</Draggable>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"w-1/2 px-8 mt-6\">\r\n                        <div className=\"relative overflow-x-auto\">\r\n                            {/* Table */}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"flex p-5 justify-end bg-gray-300 absolute bottom-0 w-full h-40 items-start\">\r\n                    <button className=\"custom-btn me-8\">Check</button>\r\n                </section>\r\n            </main>\r\n        </DndContext>\r\n    );\r\n\r\n    function handleDragEnd(event) {\r\n        if (event.over && event.over.id === 'droppable') {\r\n          // Get the dragged item data (assuming \"title\" holds the keyword)\r\n          const droppedItem = event.active.data.current?.title;\r\n      \r\n          // Check if the item is already present in the droppedItems\r\n          const isAlreadyDropped = droppedItems.some(item => item === droppedItem);\r\n          if (!isAlreadyDropped) {\r\n            // Update droppedItems only if the item is not already dropped\r\n            setDroppedItems([...droppedItems, droppedItem]);\r\n          }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Play;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}