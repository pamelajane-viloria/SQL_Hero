{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pamel\\\\OneDrive\\\\Pictures\\\\Bootcamp\\\\Village88 Bootcamp\\\\Capstone\\\\SQLHero\\\\frontend\\\\src\\\\components\\\\userApp\\\\LevelItem.js\";\n// import React from 'react';\n// import Completed from '../../assets/images/completed.svg';\n// import Current from '../../assets/images/current-level.svg';\n// import Locked from '../../assets/images/locked.svg';\n\n// function LevelItem({ completed, current, locked }) {\n//     const classes = `level-path-btn mx-2 ${\n//         completed ? 'completed' : current ? 'current ring-4 ring-offset-4 ring-gray-400' : 'locked'\n//     }`;\n\n//     return (\n//         <li className=\"mt-5\">\n//             <a href='play.html' className={classes}>\n//                 <img src={completed ? Completed : current ? Current : Locked} className='size-14 '/>\n//             </a>\n//         </li>\n//     );\n// }\n\n// export default LevelItem;\n\nimport React from 'react';\nimport Completed from '../../assets/images/completed.svg';\nimport Current from '../../assets/images/current-level.svg';\nimport Locked from '../../assets/images/locked.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LevelItem({\n  level,\n  currentLevel\n}) {\n  const isCompleted = level < currentLevel; // Check if level is completed\n  const isCurrent = level === currentLevel; // Check if level is current\n\n  const levelCategories = [{\n    difficulty: 'easy',\n    minLevel: 1,\n    maxLevel: 10\n  }, {\n    difficulty: 'moderate',\n    minLevel: 11,\n    maxLevel: 20\n  }, {\n    difficulty: 'hard',\n    minLevel: 21,\n    maxLevel: 30\n  }];\n  const classes = `level-path-btn mx-2 ${isCompleted ? 'completed' : isCurrent ? 'current ring-4 ring-offset-4 ring-gray-400' : 'locked'}`;\n  const filterLevelItems = (difficulty, levelItems) => {\n    const category = levelCategories.find(cat => cat.difficulty === difficulty);\n    if (category) {\n      return levelItems.filter(item => item.id >= category.minLevel && item.id <= category.maxLevel);\n    }\n    return [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/Game\",\n      className: classes,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isCompleted ? Completed : isCurrent ? Current : Locked,\n        className: \"size-14 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n_c = LevelItem;\nexport default LevelItem;\nvar _c;\n$RefreshReg$(_c, \"LevelItem\");","map":{"version":3,"names":["React","Completed","Current","Locked","jsxDEV","_jsxDEV","LevelItem","level","currentLevel","isCompleted","isCurrent","levelCategories","difficulty","minLevel","maxLevel","classes","filterLevelItems","levelItems","category","find","cat","filter","item","id","className","children","href","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pamel/OneDrive/Pictures/Bootcamp/Village88 Bootcamp/Capstone/SQLHero/frontend/src/components/userApp/LevelItem.js"],"sourcesContent":["// import React from 'react';\r\n// import Completed from '../../assets/images/completed.svg';\r\n// import Current from '../../assets/images/current-level.svg';\r\n// import Locked from '../../assets/images/locked.svg';\r\n\r\n// function LevelItem({ completed, current, locked }) {\r\n//     const classes = `level-path-btn mx-2 ${\r\n//         completed ? 'completed' : current ? 'current ring-4 ring-offset-4 ring-gray-400' : 'locked'\r\n//     }`;\r\n\r\n//     return (\r\n//         <li className=\"mt-5\">\r\n//             <a href='play.html' className={classes}>\r\n//                 <img src={completed ? Completed : current ? Current : Locked} className='size-14 '/>\r\n//             </a>\r\n//         </li>\r\n//     );\r\n// }\r\n\r\n// export default LevelItem;\r\n\r\nimport React from 'react';\r\nimport Completed from '../../assets/images/completed.svg';\r\nimport Current from '../../assets/images/current-level.svg';\r\nimport Locked from '../../assets/images/locked.svg';\r\n\r\nfunction LevelItem({ level, currentLevel }) {\r\n    const isCompleted = level < currentLevel; // Check if level is completed\r\n    const isCurrent = level === currentLevel; // Check if level is current\r\n  \r\n    const levelCategories = [\r\n        { difficulty: 'easy', minLevel: 1, maxLevel: 10 },\r\n        { difficulty: 'moderate', minLevel: 11, maxLevel: 20 },\r\n        { difficulty: 'hard', minLevel: 21, maxLevel: 30 },\r\n    ];\r\n\r\n    const classes = `level-path-btn mx-2 ${\r\n      isCompleted ? 'completed' : isCurrent ? 'current ring-4 ring-offset-4 ring-gray-400' : 'locked'\r\n    }`;\r\n  \r\n    const filterLevelItems = (difficulty, levelItems) => {\r\n        const category = levelCategories.find((cat) => cat.difficulty === difficulty);\r\n        if (category) {\r\n          return levelItems.filter((item) => item.id >= category.minLevel && item.id <= category.maxLevel);\r\n        }\r\n        return [];\r\n      };\r\n      \r\n    return (\r\n      <li className=\"mt-5\">\r\n        <a href='/Game' className={classes}>\r\n          <img src={isCompleted ? Completed : isCurrent ? Current : Locked} className='size-14 '/>\r\n        </a>\r\n      </li>\r\n    );\r\n}\r\n  \r\n\r\nexport default LevelItem;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,OAAO,MAAM,uCAAuC;AAC3D,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,EAAE;EACxC,MAAMC,WAAW,GAAGF,KAAK,GAAGC,YAAY,CAAC,CAAC;EAC1C,MAAME,SAAS,GAAGH,KAAK,KAAKC,YAAY,CAAC,CAAC;;EAE1C,MAAMG,eAAe,GAAG,CACpB;IAAEC,UAAU,EAAE,MAAM;IAAEC,QAAQ,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACjD;IAAEF,UAAU,EAAE,UAAU;IAAEC,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,EACtD;IAAEF,UAAU,EAAE,MAAM;IAAEC,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CACrD;EAED,MAAMC,OAAO,GAAI,uBACfN,WAAW,GAAG,WAAW,GAAGC,SAAS,GAAG,4CAA4C,GAAG,QACxF,EAAC;EAEF,MAAMM,gBAAgB,GAAGA,CAACJ,UAAU,EAAEK,UAAU,KAAK;IACjD,MAAMC,QAAQ,GAAGP,eAAe,CAACQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACR,UAAU,KAAKA,UAAU,CAAC;IAC7E,IAAIM,QAAQ,EAAE;MACZ,OAAOD,UAAU,CAACI,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAIL,QAAQ,CAACL,QAAQ,IAAIS,IAAI,CAACC,EAAE,IAAIL,QAAQ,CAACJ,QAAQ,CAAC;IAClG;IACA,OAAO,EAAE;EACX,CAAC;EAEH,oBACET,OAAA;IAAImB,SAAS,EAAC,MAAM;IAAAC,QAAA,eAClBpB,OAAA;MAAGqB,IAAI,EAAC,OAAO;MAACF,SAAS,EAAET,OAAQ;MAAAU,QAAA,eACjCpB,OAAA;QAAKsB,GAAG,EAAElB,WAAW,GAAGR,SAAS,GAAGS,SAAS,GAAGR,OAAO,GAAGC,MAAO;QAACqB,SAAS,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACC,EAAA,GA7BQ1B,SAAS;AAgClB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}