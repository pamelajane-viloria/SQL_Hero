{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pamel\\\\OneDrive\\\\Pictures\\\\Bootcamp\\\\Village88 Bootcamp\\\\Capstone\\\\SQLHero\\\\frontend\\\\src\\\\components\\\\userApp\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Close from '../../assets/images/close.svg';\nimport Correct from '../../assets/images/correct.svg';\nimport Wrong from '../../assets/images/wrong.svg';\nimport QueryPerson from '../../assets/images/person.svg';\nimport { DndContext } from '@dnd-kit/core';\nimport Droppable from './Droppable';\nimport Draggable from './Draggable';\nimport AwardModal from './AwardModal';\n// import { BrowserRouter as Link } from 'react-router-dom';\nimport awardsData from '../../data/awards.json';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  var _results$data;\n  const [queryItems, setQueryItems] = useState([]);\n  const [keywords, setKeywords] = useState([]);\n  const [results, setResults] = useState({\n    data: []\n  });\n  const [correct, setCorrect] = useState(null);\n  const [levels, setLevels] = useState([]);\n  const [currentLevel, setCurrentLevel] = useState();\n  const [correctQuery, setCorrectQuery] = useState('');\n  const [isAwardModalOpen, setIsAwardModalOpen] = useState(false);\n  const [earnedAward, setEarnedAward] = useState(null);\n  const navigate = useNavigate();\n  const {\n    levelId\n  } = useParams(); // Destructure levelId from useParams\n\n  const addKeywordToQuery = e => {\n    var _e$active$data$curren, _e$over;\n    const newKeyword = (_e$active$data$curren = e.active.data.current) === null || _e$active$data$curren === void 0 ? void 0 : _e$active$data$curren.title;\n    if (((_e$over = e.over) === null || _e$over === void 0 ? void 0 : _e$over.id) !== 'droppable' || !newKeyword) return;\n    const temp = [...queryItems];\n    temp.push(newKeyword);\n    setQueryItems(temp);\n    const updatedKeywords = keywords.filter(keyword => keyword !== newKeyword);\n    setKeywords(updatedKeywords);\n  };\n  useEffect(() => {\n    fetchLevels(currentLevel);\n  }, [currentLevel]);\n  useEffect(() => {\n    // console.log(levels); \n  }, [levels]);\n  const fetchLevels = async levelIndex => {\n    let url = '';\n    if (levelId) {\n      url = `/api/levels/${levelId}`;\n    } else {\n      url = `/api/levels/${levelIndex}`;\n    }\n    try {\n      var _levelData$levelData$;\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const levelData = await response.json();\n      const extractedKeywords = levelData.levelData.map(level => level.keywords.split(', ')).flat();\n      const correctQueryValue = ((_levelData$levelData$ = levelData.levelData[0]) === null || _levelData$levelData$ === void 0 ? void 0 : _levelData$levelData$.correct_query) || \"\";\n      setKeywords(extractedKeywords);\n      setLevels(levelData);\n      setCorrectQuery(correctQueryValue);\n    } catch (error) {\n      console.error('Error fetching levels:', error);\n    }\n  };\n  const handleCheckButtonClick = async event => {\n    const queryString = queryItems.join(' ');\n    if (queryString === correctQuery) {\n      event.target.innerText = event.target.innerText === 'Check' ? 'Continue' : 'Check';\n      setCorrect(true);\n      const response = await fetch('/api/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: queryString\n        })\n      });\n      const data = await response.json();\n      setResults(data);\n    } else {\n      setCorrect(false);\n    }\n  };\n  useEffect(() => {\n    // console.log(results);\n  }, [results]);\n  const uniqueColumns = new Set(results.data.flatMap(row => Object.keys(row)));\n  const handleNextLevel = async () => {\n    const token = localStorage.getItem('authToken');\n    const completedLevel = currentLevel + 1;\n    const earnedAward = checkForAward(completedLevel);\n    try {\n      const response = await fetch('/api/update-progress', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          completedLevel\n        })\n      });\n      const data = await response.json();\n      if (data.message === 'User move to another level.') {\n        setCurrentLevel(completedLevel);\n        setCorrect(null);\n        setResults({\n          data: []\n        });\n        setQueryItems([]);\n        if (earnedAward) {\n          setEarnedAward(earnedAward);\n          setIsAwardModalOpen(true);\n          handleAddAchievement();\n        }\n      } else {\n        console.error('Error updating user progress:', data.message);\n      }\n    } catch (err) {\n      console.error('Error during API call:', err);\n    }\n  };\n  const checkForAward = userProgress => {\n    for (const awardKey in awardsData) {\n      if (awardKey !== \"login\" && awardKey === userProgress.toString()) {\n        return awardsData[awardKey];\n      }\n    }\n    return null;\n  };\n  const handleAddAchievement = async () => {\n    const token = localStorage.getItem('authToken');\n    const earnedAward = checkForAward(currentLevel + 1).name;\n    try {\n      const response = await fetch('/api/update-achievement', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          earnedAward\n        })\n      });\n      const data = await response.json();\n      if (data.message === 'User earned an achievement.') {\n        console.log('User earned an achievement.', earnedAward);\n      } else {\n        console.error('Error updating user progress:', data.message);\n      }\n    } catch (err) {\n      console.error('Error during API call:', err);\n    }\n  };\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('authToken');\n      try {\n        const response = await fetch(`/api/user-data`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (data.success) {\n          setCurrentLevel(data.user.current_level);\n        } else {\n          console.error('Error fetching user data:', data.message);\n        }\n      } catch (err) {\n        console.error('Error during API call:', err);\n      }\n    };\n    fetchUserData();\n  }, [currentLevel]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"relative h-screen bg-gray-900\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/dashboard/home\",\n      className: \"absolute top-0 left-0 m-4\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Close,\n        alt: \"close\",\n        className: \"w-7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 77\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), levels.levelData && levels.levelData.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex p-5\",\n      children: [levels.levelData.map((level, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/2 px-8 mt-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-gray-200\",\n          children: level.level_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: level.level_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start items-center mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: QueryPerson,\n            alt: \"person\",\n            className: \"h-40\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"speech-bubble ms-4 rounded-lg text-lg\",\n            children: level.challenge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n          onDragEnd: addKeywordToQuery,\n          children: [/*#__PURE__*/_jsxDEV(Droppable, {\n            items: queryItems,\n            setQueryItems: setQueryItems,\n            queryItems: queryItems,\n            setKeywords: setKeywords,\n            keywords: keywords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: keywords.map(keyword => /*#__PURE__*/_jsxDEV(Draggable, {\n              children: keyword\n            }, keyword, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/2 px-8 mt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative overflow-x-auto\",\n          children: ((_results$data = results.data) === null || _results$data === void 0 ? void 0 : _results$data.length) > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full text-sm text-left rtl:text-right text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"text-xs text-gray-700 uppercase bg-gray-200\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Array.from(uniqueColumns).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  className: \"px-6 py-3\",\n                  children: key\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: results.data.map((result, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.keys(result).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 text-white\",\n                  children: result[key]\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 49\n                }, this))\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this), correct === null && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex p-5 justify-end bg-gray-800 absolute bottom-0 w-full h-40 items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-btn me-8\",\n        onClick: handleCheckButtonClick,\n        children: \"Check answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }, this), correct === true && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex p-5 justify-between bg-green-400 absolute bottom-0 w-full h-40 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Correct,\n          alt: \"correct\",\n          className: \"w-32\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-white\",\n          children: \"That's correct! Good Job.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-btn me-8\",\n        onClick: handleNextLevel,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this), correct === false && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex p-5 justify-between bg-secondary absolute bottom-0 w-full h-40 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Wrong,\n          alt: \"correct\",\n          className: \"w-32\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-white\",\n            children: \"No worries, you're doing great! Let's give it another shot!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-200\",\n            children: \"Click the keywords to remove them from the query.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-btn me-8\",\n        onClick: handleCheckButtonClick,\n        children: \"Check Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }, this), isAwardModalOpen && /*#__PURE__*/_jsxDEV(AwardModal, {\n      isOpen: isAwardModalOpen,\n      award: earnedAward,\n      onClose: () => setIsAwardModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"upbaAvJiKWH4eC4TqDtQLkVa6NM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Close","Correct","Wrong","QueryPerson","DndContext","Droppable","Draggable","AwardModal","awardsData","useParams","useNavigate","jsxDEV","_jsxDEV","Game","_s","_results$data","queryItems","setQueryItems","keywords","setKeywords","results","setResults","data","correct","setCorrect","levels","setLevels","currentLevel","setCurrentLevel","correctQuery","setCorrectQuery","isAwardModalOpen","setIsAwardModalOpen","earnedAward","setEarnedAward","navigate","levelId","addKeywordToQuery","e","_e$active$data$curren","_e$over","newKeyword","active","current","title","over","id","temp","push","updatedKeywords","filter","keyword","fetchLevels","levelIndex","url","_levelData$levelData$","response","fetch","method","headers","levelData","json","extractedKeywords","map","level","split","flat","correctQueryValue","correct_query","error","console","handleCheckButtonClick","event","queryString","join","target","innerText","body","JSON","stringify","query","uniqueColumns","Set","flatMap","row","Object","keys","handleNextLevel","token","localStorage","getItem","completedLevel","checkForAward","message","handleAddAchievement","err","userProgress","awardKey","toString","name","log","fetchUserData","success","user","current_level","className","children","href","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","length","index","level_title","level_description","challenge","onDragEnd","items","Array","from","key","scope","result","onClick","isOpen","award","onClose","_c","$RefreshReg$"],"sources":["C:/Users/pamel/OneDrive/Pictures/Bootcamp/Village88 Bootcamp/Capstone/SQLHero/frontend/src/components/userApp/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Close from '../../assets/images/close.svg';\r\nimport Correct from '../../assets/images/correct.svg';\r\nimport Wrong from '../../assets/images/wrong.svg';\r\nimport QueryPerson from '../../assets/images/person.svg';\r\nimport { DndContext } from '@dnd-kit/core';\r\nimport Droppable from './Droppable';\r\nimport Draggable from './Draggable';\r\nimport AwardModal from './AwardModal';\r\n// import { BrowserRouter as Link } from 'react-router-dom';\r\nimport awardsData from '../../data/awards.json';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction Game() {\r\n    const [queryItems, setQueryItems] = useState([]);\r\n    const [keywords, setKeywords] = useState([]);\r\n    const [results, setResults] = useState({ data: [] });\r\n    const [correct, setCorrect] = useState(null);\r\n    const [levels, setLevels] = useState([]);\r\n    const [currentLevel, setCurrentLevel] = useState();\r\n    const [correctQuery, setCorrectQuery] = useState('');\r\n    const [isAwardModalOpen, setIsAwardModalOpen] = useState(false);    \r\n    const [earnedAward, setEarnedAward] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const { levelId } = useParams(); // Destructure levelId from useParams\r\n\r\n    const addKeywordToQuery = (e) => {\r\n        const newKeyword = e.active.data.current?.title;\r\n        if (e.over?.id !== 'droppable' || !newKeyword) return;\r\n        const temp = [...queryItems];\r\n        temp.push(newKeyword);\r\n        setQueryItems(temp);\r\n\r\n        const updatedKeywords = keywords.filter((keyword) => keyword !== newKeyword);\r\n        setKeywords(updatedKeywords);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchLevels(currentLevel); \r\n    }, [currentLevel]); \r\n    \r\n    useEffect(() => {\r\n        // console.log(levels); \r\n    }, [levels]); \r\n    \r\n    const fetchLevels = async (levelIndex) => {\r\n        let url = '';\r\n        if (levelId) {\r\n            url = `/api/levels/${levelId}`; \r\n        } else {\r\n            url = `/api/levels/${levelIndex}`; \r\n        }\r\n        \r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            });\r\n            const levelData = await response.json();\r\n            const extractedKeywords = levelData.levelData.map(level => level.keywords.split(', ')).flat();\r\n            const correctQueryValue = levelData.levelData[0]?.correct_query || \"\";\r\n            setKeywords(extractedKeywords);\r\n            setLevels(levelData);\r\n            setCorrectQuery(correctQueryValue);\r\n        } catch (error) {\r\n            console.error('Error fetching levels:', error);\r\n        }\r\n    };\r\n\r\n    const handleCheckButtonClick = async(event) => {\r\n        const queryString = queryItems.join(' ');\r\n        if (queryString === correctQuery) {\r\n            event.target.innerText = event.target.innerText === 'Check' ? 'Continue' : 'Check';\r\n            setCorrect(true);\r\n            const response = await fetch('/api/query', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ query: queryString }),\r\n            });\r\n            const data = await response.json();\r\n            setResults(data);\r\n        } else {\r\n            setCorrect(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(results);\r\n    }, [results]);\r\n\r\n    const uniqueColumns = new Set(results.data.flatMap((row) => Object.keys(row)));\r\n\r\n    const handleNextLevel = async () => {    \r\n        const token = localStorage.getItem('authToken');\r\n        const completedLevel = currentLevel + 1;\r\n        const earnedAward = checkForAward(completedLevel);\r\n        try {\r\n            const response = await fetch('/api/update-progress', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ token, completedLevel }),\r\n            });\r\n            const data = await response.json();    \r\n            if (data.message === 'User move to another level.') {\r\n                setCurrentLevel(completedLevel);\r\n                setCorrect(null);\r\n                setResults({ data: [] });\r\n                setQueryItems([]);\r\n                if (earnedAward) {\r\n                    setEarnedAward(earnedAward);\r\n                    setIsAwardModalOpen(true);\r\n                    handleAddAchievement();\r\n                }\r\n            } else {\r\n                console.error('Error updating user progress:', data.message);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error during API call:', err);\r\n        }\r\n    }\r\n\r\n    const checkForAward = (userProgress) => {\r\n        for (const awardKey in awardsData) {\r\n            if (awardKey !== \"login\" && awardKey === userProgress.toString()) {\r\n                return awardsData[awardKey];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const handleAddAchievement = async () => {    \r\n        const token = localStorage.getItem('authToken');\r\n        const earnedAward = checkForAward(currentLevel + 1).name;\r\n        try {\r\n            const response = await fetch('/api/update-achievement', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ token, earnedAward }),\r\n            });\r\n            const data = await response.json();    \r\n            if (data.message === 'User earned an achievement.') {\r\n                console.log('User earned an achievement.', earnedAward);\r\n            } else {\r\n                console.error('Error updating user progress:', data.message);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error during API call:', err);\r\n        }\r\n    }\r\n      \r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            const token = localStorage.getItem('authToken');\r\n            try {\r\n                const response = await fetch(`/api/user-data`, {\r\n                    headers: {\r\n                      'Authorization': `Bearer ${token}`\r\n                    }\r\n                });                \r\n                const data = await response.json();\r\n                if (data.success) {\r\n                    setCurrentLevel(data.user.current_level);\r\n                } else {\r\n                    console.error('Error fetching user data:', data.message);\r\n                }\r\n            } catch (err) {\r\n                console.error('Error during API call:', err);\r\n            }\r\n        };\r\n        fetchUserData();  \r\n    }, [currentLevel]);\r\n\r\n    return (\r\n        <main className=\"relative h-screen bg-gray-900\">\r\n            <a href=\"/dashboard/home\" className=\"absolute top-0 left-0 m-4\"><img src={Close} alt=\"close\" className=\"w-7\"/></a>\r\n            {levels.levelData && levels.levelData.length > 0 && (\r\n                <section className=\"flex p-5\">\r\n                    {levels.levelData.map((level, index) => (\r\n                        <div className=\"w-1/2 px-8 mt-10\" key={index}>               \r\n                            <h1 className='font-bold text-2xl text-gray-200'>{level.level_title}</h1>\r\n                            <p className='text-gray-300'>{level.level_description}</p>\r\n                            <div className=\"flex justify-start items-center mt-4\">\r\n                                <img src={QueryPerson} alt=\"person\" className=\"h-40\"/>\r\n                                <p className=\"speech-bubble ms-4 rounded-lg text-lg\">{level.challenge}</p>\r\n                            </div>\r\n                            <DndContext onDragEnd={addKeywordToQuery}>\r\n                                <Droppable items={queryItems} setQueryItems={setQueryItems} queryItems={queryItems} setKeywords={setKeywords} keywords={keywords} />\r\n                                <ul>\r\n                                    {keywords.map((keyword) => (\r\n                                        <Draggable key={keyword}>{keyword}</Draggable>\r\n                                    ))}\r\n                                </ul>\r\n                            </DndContext>\r\n                        </div>\r\n                    ))}\r\n                    <div className=\"w-1/2 px-8 mt-6\">\r\n                        <div className=\"relative overflow-x-auto\">\r\n                            {results.data?.length > 0 && (\r\n                                <table className=\"w-full text-sm text-left rtl:text-right text-gray-500\">\r\n                                    <thead className=\"text-xs text-gray-700 uppercase bg-gray-200\">\r\n                                        <tr>\r\n                                            {Array.from(uniqueColumns).map((key) => (\r\n                                                <th key={key} scope=\"col\" className=\"px-6 py-3\">\r\n                                                    {key}\r\n                                                </th>\r\n                                            ))}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {results.data.map((result, index) => (\r\n                                            <tr key={index}>\r\n                                            {Object.keys(result).map((key) => (\r\n                                                <td key={key} className=\"px-6 py-4 text-white\">\r\n                                                {result[key]}\r\n                                                </td>\r\n                                            ))}\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n            {correct === null && (\r\n                <section className=\"flex p-5 justify-end bg-gray-800 absolute bottom-0 w-full h-40 items-center\">\r\n                    <button className=\"custom-btn me-8\" onClick={handleCheckButtonClick}>Check answer</button>\r\n                </section>\r\n            )}\r\n\r\n            {correct === true && (\r\n                <section className=\"flex p-5 justify-between bg-green-400 absolute bottom-0 w-full h-40 items-center\">\r\n                    <div className='flex items-center gap-3'>\r\n                        <img src={Correct} alt='correct' className='w-32' />\r\n                        <h2 className='text-2xl font-bold text-white'>That's correct! Good Job.</h2>\r\n                    </div>\r\n                    <button className=\"custom-btn me-8\" onClick={handleNextLevel}>Continue</button>\r\n                </section>\r\n            )}\r\n\r\n            {correct === false && (\r\n                <section className=\"flex p-5 justify-between bg-secondary absolute bottom-0 w-full h-40 items-center\">\r\n                    <div className='flex items-center gap-3'>\r\n                        <img src={Wrong} alt='correct' className='w-32' />\r\n                        <div>\r\n                            <h2 className='text-2xl font-bold text-white'>No worries, you're doing great! Let's give it another shot!</h2>\r\n                            <p className=\"text-gray-200\">Click the keywords to remove them from the query.</p>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"custom-btn me-8\" onClick={handleCheckButtonClick}>Check Again</button>\r\n                </section>\r\n            )}\r\n            {isAwardModalOpen && (\r\n                <AwardModal isOpen={isAwardModalOpen} award={earnedAward} onClose={() => setIsAwardModalOpen(false)} />\r\n            )}\r\n        </main>\r\n    ); \r\n}\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}